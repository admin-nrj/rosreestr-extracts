syntax = "proto3";

package auth;

enum UserRole {
  USER_ROLE_UNSPECIFIED = 0;  // обязательное значение по умолчанию в proto3
  USER = 1;
  ADMIN = 2;
}

enum ErrorCode {
  ERROR_CODE_UNSPECIFIED = 0;  // No error

  // Validation errors (400)
  INVALID_INPUT = 1000;
  INVALID_EMAIL_FORMAT = 1001;
  INVALID_PASSWORD_FORMAT = 1002;
  PASSWORD_TOO_SHORT = 1003;
  MISSING_REQUIRED_FIELD = 1004;

  // Authentication errors (401)
  INVALID_CREDENTIALS = 2000;
  INVALID_TOKEN = 2001;
  TOKEN_EXPIRED = 2002;

  // Authorization errors (403)
  USER_NOT_ACTIVE = 3000;
  EMAIL_NOT_VERIFIED = 3001;
  INSUFFICIENT_PERMISSIONS = 3002;

  // Resource errors (404/409)
  USER_NOT_FOUND = 4000;
  USER_ALREADY_EXISTS = 4001;
  REFRESH_TOKEN_NOT_FOUND = 4002;

  // Server errors (500)
  INTERNAL_ERROR = 5000;
  DATABASE_ERROR = 5001;
  HASH_ERROR = 5002;
}

service AuthService{
  rpc login (LoginRequest) returns (LoginResponse);
  rpc register (RegisterRequest) returns (RegisterResponse);
  rpc validateToken (ValidateTokenRequest) returns (ValidateTokenResponse);
  rpc refreshToken (RefreshTokenRequest) returns (RefreshTokenResponse);
};

message LoginRequest {
  string email = 1;
  string password = 2;
}

message RegisterRequest {
  string email = 1;
  string password = 2;
  string name = 3;
}

message RegisterResponse {
  optional string access_token = 1;
  optional string refresh_token = 2;
  optional User user = 3;
  optional string error = 4;
  ErrorCode error_code = 5;
}

message User {
  int32 user_id = 1;
  string email = 2;
  string name = 3;
  UserRole role = 4;
  bool is_active = 5;
  string lastLoginAt = 6;
  bool emailVerified = 7 ;
}

message LoginResponse {
  optional string access_token = 1;
  optional string refresh_token = 2;
  optional User user = 3;
  optional string error = 4;
  ErrorCode error_code = 5;
}

message ValidateTokenRequest {
  string token = 1;
}

message ValidateTokenResponse {
  bool valid = 1;
  optional User user = 2;
  optional string error = 3;
  ErrorCode error_code = 4;
}

message RefreshTokenRequest {
  string refresh_token = 1;
}

message RefreshTokenResponse {
  optional string access_token = 1;
  optional string refresh_token = 2;
  optional User user = 3;
  optional string error = 4;
  ErrorCode error_code = 5;
}

// npx protoc --ts_proto_out=./libs/interfaces/src/ --proto_path=./libs/proto/src/ ./libs/proto/src/*.proto --ts_proto_opt=nestJs=true
