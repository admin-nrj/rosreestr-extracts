// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v6.32.1
// source: rosreestr-users.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";
import { Error } from "./common";

export const protobufPackage = "rosreestr_users";

export interface RosreestrUser {
  id?: number | undefined;
  username: string;
  passwordEncrypted: string;
  guLogin: string;
  comment?: string | undefined;
}

export interface CreateRosreestrUserRequest {
  username: string;
  /** Plain password, will be encrypted */
  password: string;
  guLogin: string;
  comment?: string | undefined;
}

export interface GetRosreestrUserRequest {
  id: number;
}

export interface GetRosreestrUserByUsernameRequest {
  username: string;
}

export interface GetAllRosreestrUsersRequest {
}

export interface GetAllRosreestrUsersResponse {
  data: RosreestrUser[];
  error?: Error | undefined;
}

export interface UpdateRosreestrUserRequest {
  id: number;
  username?:
    | string
    | undefined;
  /** Plain password, will be encrypted if provided */
  password?: string | undefined;
  guLogin?: string | undefined;
  comment?: string | undefined;
}

export interface DeleteRosreestrUserRequest {
  id: number;
}

export interface RosreestrUserResponse {
  rosreestrUser?: RosreestrUser | undefined;
  error?: Error | undefined;
}

export interface DeleteRosreestrUserResponse {
  success: boolean;
  error?: Error | undefined;
}

export const ROSREESTR_USERS_PACKAGE_NAME = "rosreestr_users";

export interface RosreestrUsersServiceClient {
  createRosreestrUser(request: CreateRosreestrUserRequest): Observable<RosreestrUserResponse>;

  getRosreestrUser(request: GetRosreestrUserRequest): Observable<RosreestrUserResponse>;

  getRosreestrUserByUsername(request: GetRosreestrUserByUsernameRequest): Observable<RosreestrUserResponse>;

  getAllRosreestrUsers(request: GetAllRosreestrUsersRequest): Observable<GetAllRosreestrUsersResponse>;

  updateRosreestrUser(request: UpdateRosreestrUserRequest): Observable<RosreestrUserResponse>;

  deleteRosreestrUser(request: DeleteRosreestrUserRequest): Observable<DeleteRosreestrUserResponse>;
}

export interface RosreestrUsersServiceController {
  createRosreestrUser(
    request: CreateRosreestrUserRequest,
  ): Promise<RosreestrUserResponse> | Observable<RosreestrUserResponse> | RosreestrUserResponse;

  getRosreestrUser(
    request: GetRosreestrUserRequest,
  ): Promise<RosreestrUserResponse> | Observable<RosreestrUserResponse> | RosreestrUserResponse;

  getRosreestrUserByUsername(
    request: GetRosreestrUserByUsernameRequest,
  ): Promise<RosreestrUserResponse> | Observable<RosreestrUserResponse> | RosreestrUserResponse;

  getAllRosreestrUsers(
    request: GetAllRosreestrUsersRequest,
  ): Promise<GetAllRosreestrUsersResponse> | Observable<GetAllRosreestrUsersResponse> | GetAllRosreestrUsersResponse;

  updateRosreestrUser(
    request: UpdateRosreestrUserRequest,
  ): Promise<RosreestrUserResponse> | Observable<RosreestrUserResponse> | RosreestrUserResponse;

  deleteRosreestrUser(
    request: DeleteRosreestrUserRequest,
  ): Promise<DeleteRosreestrUserResponse> | Observable<DeleteRosreestrUserResponse> | DeleteRosreestrUserResponse;
}

export function RosreestrUsersServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = [
      "createRosreestrUser",
      "getRosreestrUser",
      "getRosreestrUserByUsername",
      "getAllRosreestrUsers",
      "updateRosreestrUser",
      "deleteRosreestrUser",
    ];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("RosreestrUsersService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("RosreestrUsersService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const ROSREESTR_USERS_SERVICE_NAME = "RosreestrUsersService";
